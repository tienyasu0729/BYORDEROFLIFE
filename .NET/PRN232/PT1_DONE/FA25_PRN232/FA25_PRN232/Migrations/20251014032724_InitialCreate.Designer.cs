// <auto-generated />
using System;
using FA25_PRN232.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FA25_PRN232.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251014032724_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FA25_PRN232.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Technology"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Business"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Personal Development"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Creative Arts"
                        });
                });

            modelBuilder.Entity("FA25_PRN232.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 9, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Learn ASP.NET Core from scratch",
                            Price = 120.00m,
                            Title = "ASP.NET Core Basics",
                            UserId = 1
                        },
                        new
                        {
                            CourseId = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 9, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Introduction to Blockchain technology",
                            Price = 250.50m,
                            Title = "Blockchain Fundamentals",
                            UserId = 1
                        },
                        new
                        {
                            CourseId = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 9, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Master C# with advanced topics",
                            Price = 180.00m,
                            Title = "Advanced C# Programming",
                            UserId = 1
                        },
                        new
                        {
                            CourseId = 4,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 9, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Learn how to design scalable microservices",
                            Price = 220.75m,
                            Title = "Microservices Architecture",
                            UserId = 1
                        },
                        new
                        {
                            CourseId = 5,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 9, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Implement AI solutions in business scenarios",
                            Price = 300.00m,
                            Title = "AI for Business",
                            UserId = 1
                        },
                        new
                        {
                            CourseId = 6,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Enhance productivity with better time management",
                            Price = 90.00m,
                            Title = "Time Management Skills",
                            UserId = 1
                        },
                        new
                        {
                            CourseId = 7,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Improve your public speaking confidence",
                            Price = 110.00m,
                            Title = "Public Speaking Mastery",
                            UserId = 1
                        },
                        new
                        {
                            CourseId = 8,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Learn the basics of digital art and illustration.",
                            Price = 150.00m,
                            Title = "Introduction to Digital Painting",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FA25_PRN232.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentId = 1,
                            CourseId = 1,
                            EnrollmentDate = new DateTime(2025, 10, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 2
                        },
                        new
                        {
                            EnrollmentId = 2,
                            CourseId = 6,
                            EnrollmentDate = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 2
                        },
                        new
                        {
                            EnrollmentId = 3,
                            CourseId = 8,
                            EnrollmentDate = new DateTime(2025, 10, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 2
                        },
                        new
                        {
                            EnrollmentId = 4,
                            CourseId = 1,
                            EnrollmentDate = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 3
                        },
                        new
                        {
                            EnrollmentId = 5,
                            CourseId = 4,
                            EnrollmentDate = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("FA25_PRN232.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "teacher@fpt.edu.vn",
                            Password = "HashedPassword1"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "student1@fpt.edu.vn",
                            Password = "HashedPassword2"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "student2@fpt.edu.vn",
                            Password = "HashedPassword3"
                        });
                });

            modelBuilder.Entity("FA25_PRN232.Models.Course", b =>
                {
                    b.HasOne("FA25_PRN232.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FA25_PRN232.Models.User", "User")
                        .WithMany("Courses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FA25_PRN232.Models.Enrollment", b =>
                {
                    b.HasOne("FA25_PRN232.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FA25_PRN232.Models.User", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FA25_PRN232.Models.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("FA25_PRN232.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("FA25_PRN232.Models.User", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
