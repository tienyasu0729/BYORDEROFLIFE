@page
@model Web_.Pages.Appointments.IndexModel

@{
	ViewData["Title"] = "Danh sách lịch khám";
	Layout = "_LayoutMain";
}
@functions {
	public string GetBadgeClass(string status)
	{
		return status switch
		{
			"Confirmed" => "bg-primary",
			"InProgress" => "bg-warning text-dark",
			"Completed" => "bg-success",
			"NoShow" => "bg-danger",
			_ => "bg-secondary"
		};
	}
}
<head>
	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

	<style>
		.qr-thumbnail {
			cursor: zoom-in;
			transition: transform 0.2s;
		}

		.qr-modal {
			display: none;
			position: fixed;
			z-index: 9999;
			padding-top: 100px;
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			overflow: auto;
			background-color: rgba(0,0,0,0.6); /* tối nền */
		}

		.qr-modal-content {
			margin: auto;
			display: block;
			width: 300px;
			height: 300px;
			object-fit: contain;
			background-color: white;
			padding: 10px;
			border-radius: 12px;
			box-shadow: 0 0 10px #000;
		}
	</style>
</head>

<div class="container mt-4">
	<h2 class="text-center mb-4">Danh sách lịch khám</h2>
	@if (Model.IsPatient)
	{
		<div class="text-end mb-3">
			<a asp-page="Create" class="btn btn-primary">+ Tạo lịch khám mới</a>
		</div>
	}
	<form method="get" class="form-inline mb-3">
		<input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control mr-2" placeholder="Search..." />
		<button type="submit" class="btn btn-primary">Search</button>
	</form>
	<table class="table table-bordered table-hover text-center align-middle">
		<thead class="table-light">
			<tr>
				<th>Bệnh nhân</th>
				<th>Hình thức</th>
				<th>Chuyên khoa</th>
				<th>Khung giờ</th>
				<th>Ngày khám</th>
				<th>Trạng thái</th>
				<th>QR Code</th>
				<th>Thao tác</th>
			</tr>
		</thead>
		<tbody>
			@if (Model.Appointment != null && Model.Appointment.Any())
			{
				foreach (var item in Model.Appointment)
				{
					<tr>
						<td>@item.Patient?.FullName</td>
						<td>@item.Method?.Name</td>
						<td>@item.Specialty?.Name</td>
						<td>
							@item.Slot?.StartTime.ToString("HH\\:mm") - @item.Slot?.EndTime.ToString("HH\\:mm")
						</td>
						<td>@item.AppointmentDate.ToString("dd/MM/yyyy")</td>

						<td>
							@if (Model.IsDoctor)
							{
								<select class="form-select status-select mt-1"
										data-id="@item.AppointmentId"
										data-badge="#status-badge-@item.AppointmentId"
										style="width: auto; display: inline-block;">
									<option value="Confirmed" selected="@(item.Status == "Confirmed")">Confirmed</option>
									<option value="InProgress" selected="@(item.Status == "InProgress")">In Progress</option>
									<option value="Completed" selected="@(item.Status == "Completed")">Completed</option>
									<option value="NoShow" selected="@(item.Status == "NoShow")">No Show</option>
								</select>
							}
							else
							{
								<span class="badge @GetBadgeClass(item.Status)"
									  id="status-badge-@item.AppointmentId">
									@item.Status
								</span>
							}
						</td>

						@{
							var appointmentUrl = $"{Model.CurrentDomain}/Appointments/Details?id={item.AppointmentId}";
							var qrUrl = $"https://quickchart.io/qr?text={Uri.EscapeDataString(appointmentUrl)}";
						}

						<td>
							<img src="@qrUrl"
								 alt="QR Code"
								 width="40"
								 height="40"
								 class="qr-thumbnail"
								 data-full="@appointmentUrl" />
						</td>

						<td>
							@if (item.Status == "Pending" && Model.IsPatient)
							{
								<a asp-page="./Edit" asp-route-id="@item.AppointmentId" class="btn btn-warning btn-sm me-1" title="Sửa">
									<i class="fa-solid fa-pen-to-square"></i>
								</a>
							}
							<a asp-page="./Details" asp-route-id="@item.AppointmentId" class="btn btn-info btn-sm text-white me-1" title="Chi tiết">
								<i class="fa-solid fa-circle-info"></i>
							</a>
							@if (Model.IsPatient)
							{
								<a href="#" class="btn btn-danger btn-sm cancelled-btn" data-id="@item.AppointmentId" title="Hủy">
									<i class="fa-solid fa-trash"></i>
								</a>
							}
						</td>

					</tr>
				}
			}
			else
			{
				<tr>
					<td colspan="8">Không có lịch khám nào.</td>
				</tr>
			}
		</tbody>
	</table>
	<nav aria-label="Page navigation">
		<ul class="pagination">
			<li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
				<a class="page-link" asp-page-handler="OnGetAsync" asp-route-role="@Model.SearchTerm" asp-route-SearchTerm="@Model.SearchTerm" asp-route-pageNumber="@(Model.CurrentPage - 1)" aria-label="Previous">
					Previous
				</a>
			</li>
			@for (int i = 1; i <= Model.TotalPages; i++)
			{
				<li class="page-item @(i == Model.CurrentPage ? "active" : "")">
					<a class="page-link" asp-page-handler="OnGetAsync" asp-route-role="@Model.SearchTerm" asp-route-SearchTerm="@Model.SearchTerm" asp-route-pageNumber="@i">@i</a>
				</li>
			}
			<li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
				<a class="page-link" asp-page-handler="OnGetAsync" asp-route-role="@Model.SearchTerm" asp-route-SearchTerm="@Model.SearchTerm" asp-route-pageNumber="@(Model.CurrentPage + 1)" aria-label="Next">
					Next
				</a>
			</li>
		</ul>
	</nav>
	<div id="qrModal" class="qr-modal" onclick="closeQrModal()">
		<img id="qrModalImg" class="qr-modal-content" />
	</div>

</div>
@if (TempData["SuccessMessage"] != null)
{
	<script>
		Swal.fire({
			icon: "success",
			title: "Thành công!",
			text: "@TempData["SuccessMessage"]"
		});
	</script>
}

@if (TempData["ErrorMessage"] != null)
{
	<script>
		Swal.fire({
			icon: "error",
			title: "Lỗi!",
			text: "@TempData["ErrorMessage"]"
		});
	</script>
}
@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			const thumbnails = document.querySelectorAll(".qr-thumbnail");
			const modal = document.getElementById("qrModal");
			const modalImg = document.getElementById("qrModalImg");

			thumbnails.forEach(img => {
				img.addEventListener("click", function (e) {
					const qrUrl = "https://quickchart.io/qr?text=" + encodeURIComponent(this.dataset.full);
					modalImg.src = qrUrl;
					modal.style.display = "block";
					e.stopPropagation();
				});
			});

			window.closeQrModal = function () {
				modal.style.display = "none";
			}
		});
	</script>
	<script>
		$(document).ready(function () {
			$(".cancelled-btn").on("click", function (event) {
				event.preventDefault();
				var id = $(this).data("id");

				Swal.fire({
					title: "Bạn có chắc chắn?",
					text: "Lịch khám này sẽ bị hủy!",
					icon: "warning",
					showCancelButton: true,
					confirmButtonColor: "#d33",
					cancelButtonColor: "#3085d6",
					confirmButtonText: "Hủy!",
					cancelButtonText: "Trở lại"
				}).then((result) => {
					if (result.isConfirmed) {
						$.post(`?handler=Cancelled&id=${id}`)
							.done(function () {
								Swal.fire("Đã Hủy!", "Đã hủy lịch khám", "success")
									.then(() => location.reload());
							})
							.fail(function () {
								Swal.fire("Lỗi!", "Không thể hủy lịch khám", "error");
							});
					}
				});
			});
		});
	</script>
	<script>
		$(document).ready(function () {
			const getBadgeClass = (status) => {
				switch (status) {
					case "Confirmed": return "bg-primary";
					case "InProgress": return "bg-warning text-dark";
					case "Completed": return "bg-success";
					case "NoShow": return "bg-danger";
					default: return "bg-secondary";
				}
			};

			$(".status-select").on("change", function () {
				const newStatus = $(this).val();
				const id = $(this).data("id");
				const badgeSelector = $(this).data("badge");

				Swal.fire({
					title: "Xác nhận cập nhật?",
					text: `Bạn có chắc chắn muốn đổi trạng thái lịch khám sang "${newStatus}"?`,
					icon: "question",
					showCancelButton: true,
					confirmButtonText: "Cập nhật",
					cancelButtonText: "Hủy"
				}).then((result) => {
					if (result.isConfirmed) {
						$.post("?handler=UpdateStatus", { id: id, status: newStatus })
							.done(function (res) {
								if (res.success) {
									Swal.fire("Thành công!", res.message, "success");

									// ✅ Cập nhật badge
									const $badge = $(badgeSelector);
									$badge
										.text(newStatus)
										.attr("class", "badge " + getBadgeClass(newStatus));
								} else {
									Swal.fire("Lỗi!", res.message, "error");
								}
							})
							.fail(function () {
								Swal.fire("Lỗi!", "Không thể cập nhật trạng thái.", "error");
							});
					}
				});
			});
		});
	</script>



}