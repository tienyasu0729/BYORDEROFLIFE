@page
@model Web_.Pages.Appointments.CreateModel
@{
    ViewData["Title"] = "Tạo lịch khám";
    Layout = "_LayoutMain";
}
<link rel="stylesheet" href="~/css/chatbox.css" asp-append-version="true" />

<style>
    body {
        background-color: #e9f5fc; /* Nền xanh nhạt */
    }

    .form-container {
        background-color: #ffffff;
        padding: 30px;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        margin-top: 40px;
    }

    h1, h4 {
        color: #006699;
    }

    label {
        font-weight: 600;
        color: #005580;
    }

    .btn-primary {
        background-color: #007acc;
        border-color: #007acc;
    }

        .btn-primary:hover {
            background-color: #005f99;
            border-color: #005f99;
        }

    .btn-outline-primary {
        border-color: #007acc;
        color: #007acc;
    }

        .btn-outline-primary:hover {
            background-color: #e6f3fc;
            color: #005f99;
            border-color: #005f99;
        }

    hr {
        border-top: 2px solid #cce7f6;
    }
</style>

<div class="container" style="max-width: 960px;">
    <div class="form-container">
        <h1 class="text-center mb-4">Tạo lịch khám mới</h1>

        <form method="post">
            <div class="row">
                <!-- Patient Info -->
                <div class="col-md-6 border-end pe-4">
                    <h4 class="text-center">Thông tin bệnh nhân</h4>
                    <hr />
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <input type="hidden" asp-for="Patient.RegisteredBy" value="@Model.UserId" />

                    <div class="form-group mb-3">
                        <label asp-for="Patient.FullName" class="form-label">Họ tên</label>
                        <input asp-for="Patient.FullName" class="form-control" />
                        <span asp-validation-for="Patient.FullName" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Patient.Age" class="form-label">Tuổi</label>
                        <input asp-for="Patient.Age" class="form-control" />
                        <span asp-validation-for="Patient.Age" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label class="form-label d-block">Giới tính</label>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" asp-for="Patient.Gender" value="true" id="genderNam" />
                            <label class="form-check-label" for="genderNam">Nam</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" asp-for="Patient.Gender" value="false" id="genderNu" />
                            <label class="form-check-label" for="genderNu">Nữ</label>
                        </div>
                        <span asp-validation-for="Patient.Gender" class="text-danger d-block mt-1"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Patient.Note" class="form-label">Ghi chú</label>
                        <textarea asp-for="Patient.Note" class="form-control" rows="4"></textarea>
                        <span asp-validation-for="Patient.Note" class="text-danger"></span>
                    </div>
                </div>

                <!-- Appointment Info -->
                <div class="col-md-6 ps-4">
                    <h4 class="text-center">Thông tin lịch khám</h4>
                    <hr />
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <input type="hidden" asp-for="Appointment.PatientId" value="@Model.PatientId" />

                    <div class="form-group mb-3">
                        <label asp-for="Appointment.AppointmentDate" class="form-label">Ngày khám</label>
                        <input asp-for="Appointment.AppointmentDate" type="date" class="form-control" id="appointmentDate" min="@DateTime.Today.ToString("yyyy-MM-dd")" />
                        <span asp-validation-for="Appointment.AppointmentDate" class="text-danger"></span>
                    </div>


                    <div class="form-group mb-3">
                        <label asp-for="Appointment.SlotId" class="form-label">Khung giờ</label>
                        <select asp-for="SelectedSlotId" class="form-control" id="slotSelect">
                            <option value="">-- Chọn khung giờ --</option>
                            @foreach (var item in Model.SlotOptions)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                        <span asp-validation-for="SelectedSlotId" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Appointment.SpecialtyId" class="form-label">Chuyên khoa</label>
                        <select asp-for="SelectedSpecialtyId" class="form-control" id="specialtySelect">
                            <option value="">-- Chọn chuyên khoa --</option>
                            @foreach (var item in Model.SpecialtyOptions)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                        <span asp-validation-for="SelectedSpecialtyId" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Appointment.MethodId" class="form-label">Hình thức khám</label>
                        <select asp-for="SelectedMethodId" class="form-control" id="methodSelect">
                            <option value="">-- Chọn hình thức --</option>
                        </select>
                        <span asp-validation-for="SelectedMethodId" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Appointment.DoctorId" class="form-label">Bác sĩ</label>
                        <select asp-for="SelectedDoctorId" class="form-control" id="doctorSelect">
                            <option value="">-- Chọn bác sĩ --</option>
                        </select>
                        <span asp-validation-for="SelectedDoctorId" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group mt-4 text-center d-flex justify-content-center gap-3">
                    <input type="submit" value="Tạo lịch khám" class="btn btn-primary px-4" />
                    <a asp-page="Index" class="btn btn-outline-primary px-4">← Quay lại danh sách</a>
                </div>
            </div>
        </form>
    </div>
</div>

    <div id="chat-toggle" title="Chat tư vấn">
        <animated-icons src="https://animatedicons.co/get-icon?name=Support&style=minimalistic&token=d8ea65cf-400c-4dc9-85cb-dd84ac49213c"
                        trigger="click"
                        attributes='{"variationThumbColour":"#536DFE","variationName":"Two Tone","variationNumber":2,"numberOfGroups":2,"backgroundIsGroup":false,"strokeWidth":1,"defaultColours":{"group-1":"#000000","group-2":"#536DFE","background":"#FFFFFF"}}'
                        height="60" width="60"></animated-icons>
    </div>

    <div id="chat-box" class="hidden">
        <div class="chat-header">
            Gemini AI Tư vấn
        </div>
        <div id="chat-messages"></div>
        <div class="chat-input">
            <input type="text" id="user-input" placeholder="Nhập câu hỏi..." />
            <button id="send-btn">Gửi</button>
        </div>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://animatedicons.co/scripts/embed-animated-icons.js"></script>
    <script>
        const API_KEY = "@Model.GeminiApiKey";
    </script>
    <script src="~/js/Chatbox.js"></script>

    <script>
        $(document).ready(function () {
            function loadDoctors() {
                const specialtyId = $('#specialtySelect').val();
                const slotId = $('#slotSelect').val();
                const date = $('#appointmentDate').val();
                const methodId = $('#methodSelect').val();
                const selectedDoctorId = '@Model.SelectedDoctorId'; 

                const $doctorSelect = $('#doctorSelect');

                if (!(specialtyId && slotId && date && methodId)) {
                    $doctorSelect.prop('disabled', true);
                    $doctorSelect.empty().append($('<option>', {
                        value: '',
                        text: '-- Chọn doctor --'
                    }));
                    return;
                }

                $.ajax({
                    url: `/Appointments/Create?handler=DoctorsByFilters`,
                    type: 'GET',
                    data: {
                        specialtyId: specialtyId,
                        slotId: slotId,
                        date: date
                    },
                    success: function (data) {
                        $doctorSelect.empty();

                        if (data.length === 0 || (data.length === 1 && data[0].value === '')) {
                            $doctorSelect.append($('<option>', {
                                value: '',
                                text: 'Không có bác sĩ phù hợp trong slot này, vui lòng chọn lại slot khác'
                            }));
                            $doctorSelect.prop('disabled', true);
                            return;
                        }

                        $doctorSelect.append($('<option>', {
                            value: '',
                            text: '-- Chọn doctor --'
                        }));

                        $.each(data, function (i, item) {
                            const option = $('<option>', {
                                value: item.value,
                                text: item.text
                            });

                            if (item.value == selectedDoctorId) {
                                option.attr('selected', 'selected');
                            }

                            $doctorSelect.append(option);
                        });

                        $doctorSelect.prop('disabled', false);
                    },
                    error: function () {
                        $doctorSelect.prop('disabled', true);
                    }
                });
            }

            $('#specialtySelect').on('change', function () {
                const specialtyId = $(this).val();

                $('#methodSelect').empty().append($('<option>', {
                    value: '',
                    text: '-- Chọn method --'
                }));
                $('#doctorSelect').empty().append($('<option>', {
                    value: '',
                    text: '-- Chọn doctor --'
                })).prop('disabled', true);

                if (specialtyId) {
                    $.ajax({
                        url: `/Appointments/Create?handler=MethodsBySpecialty`,
                        type: 'GET',
                        data: { specialtyId: specialtyId },
                        success: function (data) {
                            $.each(data, function (i, item) {
                                $('#methodSelect').append($('<option>', {
                                    value: item.value,
                                    text: item.text
                                }));
                            });

                            const slotVal = $('#slotSelect').val();
                            const dateVal = $('#appointmentDate').val();
                            if (slotVal && dateVal) {
                                loadDoctors();
                            }
                        }
                    });
                }
            });

            $('#slotSelect, #appointmentDate, #methodSelect').on('change', loadDoctors);

            $('#doctorSelect').prop('disabled', true);
        });
    </script>
    <script>
        function hideChatBox() {
            const chatBox = document.getElementById("chat-box");
            if (chatBox) {
                chatBox.classList.remove("visible");
                chatBox.classList.add("hidden");
            }
        }

        function toggleChatBox() {
            const chatBox = document.getElementById("chat-box");
            if (!chatBox) return;

            const isVisible = chatBox.classList.contains("visible");

            if (isVisible) {
                chatBox.classList.remove("visible");
                chatBox.classList.add("hidden");
            } else {
                chatBox.classList.remove("hidden");
                chatBox.classList.add("visible");
            }
        }

        // Ẩn khi chọn dropdown
        ['specialtySelect', 'slotSelect', 'methodSelect', 'doctorSelect'].forEach(id => {
            const el = document.getElementById(id);
            if (el) {
                el.addEventListener("mousedown", hideChatBox);
            }
        });

        // Bật lại khi click nút bong bóng
        document.getElementById("chat-toggle")?.addEventListener("click", toggleChatBox);
    </script>

}
